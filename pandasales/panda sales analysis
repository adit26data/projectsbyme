import pandas as pd
import os
from itertools import combinations
from collections import Counter
import matplotlib .pyplot as plt
#merging twelve months of sales data
files=[file for file in os.listdir("C:/Users/Adit/Desktop/game/Pandas-Data-Science-Tasks-master/Pandas-Data-Science-Tasks-master/SalesAnalysis/Sales_Data")]
allmonthsdata=pd.DataFrame()
for file in files:
    df=pd.read_csv("C:/Users/Adit/Desktop/game/Pandas-Data-Science-Tasks-master/Pandas-Data-Science-Tasks-master/SalesAnalysis/Sales_Data/"+file)
    allmonthsdata=pd.concat([allmonthsdata,df])
allmonthsdata.to_csv("all_data_copy.csv",index=False)
all_data=pd.read_csv("all_data_copy.csv")
#cleaing the data
nan_df=all_data[all_data.isna().any(axis=1)]
all_data=all_data.dropna(how='all')
all_data=all_data[all_data['Order Date'].str[0:2]!="Or"]
all_data["Month"]=all_data['Order Date'].str[0:2]
all_data["Month"]=all_data["Month"].astype('int32')
all_data["Quantity Ordered"]=all_data["Quantity Ordered"].astype('int32')
all_data['Price Each']=all_data["Price Each"].astype('float64')
#-----------------------------------------------
#what is the best month of the sales and how much was earned
#add a sales column
all_data["Sales"]=all_data["Quantity Ordered"]*all_data["Price Each"]
results=all_data.groupby('Month').sum()
#-------------------------------------------------------
print(results) #do on console
months=range(1,13)
plt.bar(months,results["Sales"])
plt.xticks(months)
plt.ylabel("Sales in US dollars")
plt.xlabel("month number ")
plt.show()
#------------------------------------------------------
#what city had the highest number of sales
all_data["City"]=all_data["Purchase Address"].apply(lambda x:x.split(',')[1]+" "+x.split(",")[2].split(' ')[1])
results2=all_data.groupby("City").sum()
print(results2)
cities=[city for city,df in all_data.groupby("City")]
plt.bar(cities,results2["Sales"])
plt.xticks(cities,rotation='vertical',size=8)
plt.ylabel("Sales in US dollars")
plt.xlabel("city name")
plt.show()
#------------------------------------------------------------
#what time should we display advertisements to maxmise the likelihood of cutomers buying the product
all_data["DateTime"]=all_data["Order Date"].apply(lambda x:x.split(" ")[1].split(":")[0])
results3=all_data.groupby("DateTime").sum()
print(results3)
adv=[date for date, df in all_data.groupby("DateTime")]
plt.plot(adv,all_data.groupby("DateTime").count())
plt.xticks(adv)
plt.ylabel("sales")
plt.xlabel("hours")
plt.grid()
plt.show()
#---------------------------------------------------------
#what products are often sold together
df=all_data[all_data["Order ID"].duplicated(keep=False)]
df["Grouped"]=df.groupby("Order ID")["Product"].transform(lambda x:','.join(x))
df2=df[['Order ID','Grouped']].drop_duplicates()
count=Counter()
for i in df2["Grouped"]:
    i_list=i.split(',')
    count.update(Counter(combinations(i_list,2)))
for k,v in count.most_common(10):
    print(k," ",v)
#-------------------------------------------------------
#which product is sold the most
product_group=all_data.groupby("Product")
quantity=product_group.sum()["Quantity Ordered"]
print(quantity)
pro=[product for product, df in product_group]
plt.bar(pro,quantity)
plt.xticks(pro,rotation="vertical",size=8)
plt.ylabel("Product quantity")
plt.xlabel("product name")
plt.show()
#----------------------------------------------------------
#-------------------------------------------------------
#mean price
prices = all_data.groupby('Product').mean()['Price Each']
fig, ax1 = plt.subplots()
ax2=ax1.twinx()
ax1.bar(pro,quantity,color='g')
ax2.plot(pro,prices,color='b')
ax1.set_xlabel('Product Name')
ax1.set_ylabel('Quantity Ordered',color='g')
ax2.set_ylabel('Price($)',color='b')
ax1.set_xticklabels(pro,rotation='vertical',size=8)
fig.show()
#-----------------------------------------------------
#-----------------------------------------------------------
#which address has the highest number of orders
all_data=all_data.dropna(how='any',axis=0)
all_data["zip code"]=all_data["Purchase Address"].apply(lambda x:x.split(",")[2])
zip_grp=all_data.groupby("zip code")
quantity2=zip_grp.sum()["Quantity Ordered"]
print(quantity2)
add=[addr for addr , df in zip_grp]
plt.bar(add,quantity)
plt.xticks(add,rotation="vertical",size=8)
plt.xlabel("region")
plt.ylabel("product quantity")
plt.show()
#----------------------------------------------------------------
#total sale of each product sold all over 12 months
eachsale=all_data.groupby("Product")
purchase=eachsale.sum()["Price Each"]
print(purchase)
p=[pur for pur,df in eachsale]
plt.bar(p,purchase)
plt.xticks(p,rotation="vertical",size=8)
plt.xlabel("product name")
plt.ylabel("total purchase")
plt.show()
